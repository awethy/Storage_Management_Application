// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Storage_Management_Application.Data.Contexts;

#nullable disable

namespace Storage_Management_Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Storage_Management_Application.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitsOMId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitsOMId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ReceiptDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReceiptDocuments");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ReceiptResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("ReceiptDocumentId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitsOMId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptDocumentId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitsOMId");

                    b.ToTable("ReceiptResources");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ShipmentDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ShipmentDocuments");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ShipmentResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitsOMId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitsOMId");

                    b.ToTable("ShipmentResources");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.UnitsOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitsOMs");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.Balance", b =>
                {
                    b.HasOne("Storage_Management_Application.Models.Resource", "Resource")
                        .WithMany("Balances")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Storage_Management_Application.Models.UnitsOM", "UnitsOM")
                        .WithMany("Balances")
                        .HasForeignKey("UnitsOMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("UnitsOM");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ReceiptResource", b =>
                {
                    b.HasOne("Storage_Management_Application.Models.ReceiptDocument", "ReceiptDocument")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("ReceiptDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Storage_Management_Application.Models.Resource", "Resource")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Storage_Management_Application.Models.UnitsOM", "UnitsOM")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("UnitsOMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptDocument");

                    b.Navigation("Resource");

                    b.Navigation("UnitsOM");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ShipmentDocument", b =>
                {
                    b.HasOne("Storage_Management_Application.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ShipmentResource", b =>
                {
                    b.HasOne("Storage_Management_Application.Models.Resource", "Resource")
                        .WithMany("ShipmentResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Storage_Management_Application.Models.UnitsOM", "UnitsOM")
                        .WithMany("ShipmentResources")
                        .HasForeignKey("UnitsOMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("UnitsOM");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.ReceiptDocument", b =>
                {
                    b.Navigation("ReceiptResources");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.Resource", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("ReceiptResources");

                    b.Navigation("ShipmentResources");
                });

            modelBuilder.Entity("Storage_Management_Application.Models.UnitsOM", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("ReceiptResources");

                    b.Navigation("ShipmentResources");
                });
#pragma warning restore 612, 618
        }
    }
}
